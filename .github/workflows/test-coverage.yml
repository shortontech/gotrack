name: Tests & Coverage

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'

      - name: Run tests with coverage
        run: |
          go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
          go tool cover -func=coverage.out -o=coverage.txt
          
      - name: Calculate coverage
        id: coverage
        run: |
          # Extract total coverage percentage
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE%"
          
          # Determine badge color
          if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
            COLOR="brightgreen"
          elif (( $(echo "$COVERAGE >= 60" | bc -l) )); then
            COLOR="yellow"
          elif (( $(echo "$COVERAGE >= 40" | bc -l) )); then
            COLOR="orange"
          else
            COLOR="red"
          fi
          echo "color=$COLOR" >> $GITHUB_OUTPUT

      - name: Create coverage badge
        if: github.ref == 'refs/heads/main'
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: 06522d3b723a877fce2c749350f6dc83
          filename: gotrack-coverage.json
          label: coverage
          message: ${{ steps.coverage.outputs.coverage }}%
          color: ${{ steps.coverage.outputs.color }}

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: coverage
          message: |
            ## Coverage Report
            
            **Total Coverage:** `${{ steps.coverage.outputs.coverage }}%`
            
            <details>
            <summary>Coverage by package</summary>
            
            ```
            $(cat coverage.txt)
            ```
            </details>

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.out
            coverage.txt
          retention-days: 30
