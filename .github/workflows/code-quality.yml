name: Code Quality

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  gocyclo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'

      - name: Install gocyclo
        run: go install github.com/fzipp/gocyclo/cmd/gocyclo@latest

      - name: Run gocyclo
        id: gocyclo
        run: |
          echo "## Cyclomatic Complexity Report" > complexity_report.md
          echo "" >> complexity_report.md
          
          # Run gocyclo and capture output
          gocyclo -over 15 . > complexity_output.txt 2>&1 || true
          
          # Separate non-test and test files
          grep -v "_test.go" complexity_output.txt > non_test_complexity.txt || true
          grep "_test.go" complexity_output.txt > test_complexity.txt || true
          
          # Check non-test files
          if [ -s non_test_complexity.txt ]; then
            echo "status=fail" >> $GITHUB_OUTPUT
            echo "❌ **Non-test functions exceed complexity threshold of 15:**" >> complexity_report.md
            echo "" >> complexity_report.md
            echo '```' >> complexity_report.md
            cat non_test_complexity.txt >> complexity_report.md
            echo '```' >> complexity_report.md
            echo "" >> complexity_report.md
          else
            echo "status=pass" >> $GITHUB_OUTPUT
            echo "✅ All non-test functions have acceptable complexity (≤15)" >> complexity_report.md
            echo "" >> complexity_report.md
          fi
          
          # Check test files (now also enforced)
          if [ -s test_complexity.txt ]; then
            echo "status=fail" >> $GITHUB_OUTPUT
            echo "❌ **Test functions exceed complexity threshold of 15:**" >> complexity_report.md
            echo "" >> complexity_report.md
            echo '```' >> complexity_report.md
            cat test_complexity.txt >> complexity_report.md
            echo '```' >> complexity_report.md
            echo "" >> complexity_report.md
            echo "🚨 **Build will fail** - These test functions must be refactored before merging." >> complexity_report.md
            echo "" >> complexity_report.md
          fi
          
          # Always show top 10 most complex functions
          echo "<details>" >> complexity_report.md
          echo "<summary>Top 10 most complex functions</summary>" >> complexity_report.md
          echo "" >> complexity_report.md
          echo '```' >> complexity_report.md
          gocyclo -top 10 . >> complexity_report.md
          echo '```' >> complexity_report.md
          echo "</details>" >> complexity_report.md
          
          # Display in workflow log
          cat complexity_report.md

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: gocyclo
          path: complexity_report.md

      - name: Upload complexity report
        uses: actions/upload-artifact@v4
        with:
          name: complexity-report
          path: |
            complexity_report.md
            complexity_output.txt
            non_test_complexity.txt
            test_complexity.txt
          retention-days: 30

      - name: Check complexity threshold
        if: steps.gocyclo.outputs.status == 'fail'
        run: |
          echo "::error::Functions exceed the complexity threshold of 15. Refactoring is required before merging."
          if [ -s non_test_complexity.txt ]; then
            echo "Non-test functions:"
            cat non_test_complexity.txt
          fi
          if [ -s test_complexity.txt ]; then
            echo "Test functions:"
            cat test_complexity.txt
          fi
          exit 1
